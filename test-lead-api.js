// –¢–µ—Å—Ç api/lead.js –Ω–∞–ø—Ä—è–º—É—é
const http = require('http');

const testData = {
  gas_url: 'https://script.google.com/macros/s/AKfycbxiJrvTNiGfXTbfFWMiTWEGAyh4RKFhoKU8zjIfmQqrZlphC_vdO4R_OS9zhd-gYoZJOw/exec',
  timestamp: new Date().toISOString(),
  name: '–¢–µ—Å—Ç API Lead',
  phone: '+375291234567',
  category: '–ö—Ä–æ–≤–∞—Ç—å',
  gift: '–ü–æ–¥—ä–µ–º–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –≤ –ø–æ–¥–∞—Ä–æ–∫',
  messenger: 'Telegram',
  wishes: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ —á–µ—Ä–µ–∑ API',
  pretext: '–ó–∞–ø—Ä–æ—Å –ø–æ–¥–±–æ—Ä–∫–∏ –º–µ–±–µ–ª–∏ —Å –ø–æ–¥–∞—Ä–∫–æ–º',
  page_url: 'https://test-api.com',
  session_id: 'test_api_session_789'
};

const postData = JSON.stringify(testData);

const options = {
  hostname: 'localhost',
  port: 3000,
  path: '/api/lead',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': Buffer.byteLength(postData)
  }
};

console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ api/lead.js:', testData);

const req = http.request(options, (res) => {
  console.log(`–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${res.statusCode}`);
  console.log(`–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:`, res.headers);
  
  let data = '';
  res.on('data', (chunk) => {
    data += chunk;
  });
  
  res.on('end', () => {
    console.log('–û—Ç–≤–µ—Ç –æ—Ç api/lead.js:', data);
    if (res.statusCode === 200) {
      console.log('‚úÖ –¢–µ—Å—Ç API —É—Å–ø–µ—à–µ–Ω! –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Google Sheets');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API');
    }
  });
});

req.on('error', (e) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', e.message);
  console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
});

req.write(postData);
req.end();
